{"version":3,"sources":["components/ui/Input/Input.js","components/ui/Input/Input.module.css","shared/validation.js","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/contact-form.contant.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js"],"names":["Input","props","inputElement","inputClasses","cssClasses","InputElement","invalid","shouldValidate","touched","push","Invalid","elementType","onChange","changed","value","className","join","elementConfig","options","map","option","displayValue","Label","label","module","exports","checkValidity","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","CheckoutSummary","style","width","margin","Burger","ingredients","Button","clicked","onCheckoutCancelled","type","onCheckoutContinued","CONTACT_DATA_FORM","name","placeholder","validation","valid","street","zipCode","country","email","deliveryMethod","ContactData","state","orderForm","inputChangedHandler","event","inputIdentifier","updatedFormEl","updateObject","target","updatedOrderForm","setState","orderHandler","e","preventDefault","formData","formElIdentifier","order","ings","price","orderData","userId","onOrderBurger","token","Object","entries","this","every","formElementsArray","key","id","config","form","onSubmit","formEl","disabled","isFormValid","loading","Spinner","Component","connect","burgerBuilderReducer","totalPrice","orderReducer","auth","dispatch","actions","WithErrorHandler","axios","Checkout","onCheckoutCancelledHandler","history","goBack","onCheckoutContinuedHandler","replace","summary","to","purchasedRedirect","purchased","path","match","url","component"],"mappings":"8IAiEeA,IA9DD,SAACC,GACb,IAAIC,EAAe,KACbC,EAAa,CAACC,IAAWC,cAM/B,OAJGJ,EAAMK,SAAWL,EAAMM,gBAAkBN,EAAMO,SAChDL,EAAaM,KAAKL,IAAWM,SAGvBT,EAAMU,aACZ,IAAK,QACHT,EACE,mCACEU,SAAUX,EAAMY,QAChBC,MAAOb,EAAMa,MACbC,UAAWZ,EAAaa,KAAK,MACzBf,EAAMgB,gBAGd,MACF,IAAK,WACHf,EACE,sCACEU,SAAUX,EAAMY,QAChBC,MAAOb,EAAMa,MACbC,UAAWZ,EAAaa,KAAK,MACzBf,EAAMgB,gBAGd,MACF,IAAK,SACHf,EACE,wBACEU,SAAUX,EAAMY,QAChBC,MAAOb,EAAMa,MACbC,UAAWZ,EAAaa,KAAK,KAH/B,SAKGf,EAAMgB,cAAcC,QAAQC,KAAI,SAACC,GAAD,OAC/B,wBAA2BN,MAAOM,EAAON,MAAzC,SACGM,EAAOC,cADGD,EAAON,YAM1B,MACF,QACEZ,EACE,mCACEU,SAAUX,EAAMY,QAChBC,MAAOb,EAAMa,MACbC,UAAWX,IAAWC,cAClBJ,EAAMgB,gBAIlB,OACE,sBAAKF,UAAWX,IAAWJ,MAA3B,UACE,uBAAOe,UAAWX,IAAWkB,MAA7B,SAAqCrB,EAAMsB,QAC1CrB,O,oBC3DPsB,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,aAAe,4BAA4B,QAAU,yB,iCCAjI,kCAAO,IAAMC,EAAgB,SAACZ,EAAOa,GACjC,IAAIC,GAAU,EACd,IAAKD,EACD,OAAO,EAeX,GAZIA,EAAME,WACND,EAA2B,KAAjBd,EAAMgB,QAAiBF,GAGjCD,EAAMI,YACNH,EAAUd,EAAMkB,QAAUL,EAAMI,WAAaH,GAG7CD,EAAMM,YACNL,EAAUd,EAAMkB,QAAUL,EAAMM,WAAaL,GAG7CD,EAAMO,QAAS,CAEfN,EADgB,wIACEO,KAAKrB,IAAUc,EAGrC,GAAID,EAAMS,UAAW,CAEjBR,EADgB,QACEO,KAAKrB,IAAUc,EAGrC,OAAOA,I,oBC5BXJ,EAAOC,QAAU,CAAC,gBAAkB,2C,oBCApCD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,OAAS,8B,4HCkB3DY,EAbS,SAACpC,GACvB,OACE,sBAAKc,UAAWX,IAAWiC,gBAA3B,UACE,yDACA,qBAAKC,MAAO,CAAEC,MAAO,OAASC,OAAQ,QAAtC,SACE,cAACC,EAAA,EAAD,CAAQC,YAAazC,EAAMyC,gBAE3B,cAACC,EAAA,EAAD,CAAQC,QAAS3C,EAAM4C,oBAAqBC,KAAM,SAAlD,oBACA,cAACH,EAAA,EAAD,CAAQC,QAAS3C,EAAM8C,oBAAqBD,KAAM,UAAlD,0B,mFC2EOE,EAzFkB,CAC/BC,KAAM,CACJtC,YAAa,QACbM,cAAe,CACb6B,KAAM,OACNI,YAAa,aAEfpC,MAAO,GACPqC,WAAY,CACVtB,UAAU,GAEZuB,OAAO,EACP5C,SAAS,GAEX6C,OAAQ,CACN1C,YAAa,QACbM,cAAe,CACb6B,KAAM,OACNI,YAAa,mBAEfpC,MAAO,GACPqC,WAAY,CACVtB,UAAU,GAEZuB,OAAO,EACP5C,SAAS,GAEX8C,QAAS,CACP3C,YAAa,QACbM,cAAe,CACb6B,KAAM,OACNI,YAAa,iBAEfpC,MAAO,GACPqC,WAAY,CACVtB,UAAU,EACVE,UAAW,EACXE,UAAW,IAEbmB,OAAO,EACP5C,SAAS,GAEX+C,QAAS,CACP5C,YAAa,QACbM,cAAe,CACb6B,KAAM,OACNI,YAAa,gBAEfpC,MAAO,GACPqC,WAAY,CACVtB,UAAU,GAEZuB,OAAO,EACP5C,SAAS,GAEXgD,MAAO,CACL7C,YAAa,QACbM,cAAe,CACb6B,KAAM,QACNI,YAAa,cAEfpC,MAAO,GACPqC,WAAY,CACVtB,UAAU,GAEZuB,OAAO,EACP5C,SAAS,GAEXiD,eAAgB,CACd9C,YAAa,SACbM,cAAe,CACbC,QAAS,CACP,CACEJ,MAAO,UACPO,aAAc,WAEhB,CACEP,MAAO,WACPO,aAAc,cAIpB8B,WAAY,GACZrC,MAAO,UACPsC,OAAO,EACP5C,SAAS,I,gBCxEPkD,E,4MACJC,MAAQ,CACNC,UAAWZ,G,EAOba,oBAAsB,SAACC,EAAOC,GAG5B,IAAMC,EAAiBC,YAAa,EAAKN,MAAMC,UAAUG,GAAkB,CACzEjD,MAAOgD,EAAMI,OAAOpD,MACpBsC,MAAO1B,YACHoC,EAAMI,OAAOpD,MACb,EAAK6C,MAAMC,UAAUG,GAAiBZ,YAE1C3C,SAAS,IAGL2D,EAAmBF,YACxB,EAAKN,MAAMC,UADyB,eAG9BG,EAAkBC,IAGzB,EAAKI,SAAS,CAAER,UAAWO,K,EAG7BE,aAAe,SAACC,GACdA,EAAEC,iBAEF,IAAMC,EAAW,GACjB,IAAK,IAAIC,KAAoB,EAAKd,MAAMC,UACtCY,EAASC,GAAoB,EAAKd,MAAMC,UAAUa,GAAkB3D,MAGtE,IAAM4D,EAAQ,CACZhC,YAAa,EAAKzC,MAAM0E,KACxBC,MAAO,EAAK3E,MAAM2E,MAClBC,UAAWL,EACXM,OAAQ,EAAK7E,MAAM6E,QAGrB,EAAK7E,MAAM8E,cAAcL,EAAO,EAAKzE,MAAM+E,Q,4DAvC3C,OAAOC,OAAOC,QAAQC,KAAKxB,MAAMC,WAAWwB,OAAM,oDAAwBhC,W,+BA0ClE,IAAD,OACDiC,EAAoB,GAC1B,IAAK,IAAIC,KAAOH,KAAKxB,MAAMC,UACzByB,EAAkB5E,KAAK,CACrB8E,GAAID,EACJE,OAAQL,KAAKxB,MAAMC,UAAU0B,KAIjC,IAAMG,EACJ,uBAAMC,SAAUP,KAAKd,aAArB,UACGgB,EAAkBlE,KAAI,SAACwE,GAAD,OACrB,cAAC3F,EAAA,EAAD,CACEM,SAAUqF,EAAOH,OAAOpC,MACxBvC,QAAS,SAACiD,GAAD,OAAW,EAAKD,oBAAoBC,EAAO6B,EAAOJ,KAE3D/E,QAASmF,EAAOH,OAAOhF,QACvBD,eAAgBoF,EAAOH,OAAOrC,WAC9BrC,MAAO6E,EAAOH,OAAO1E,MACrBG,cAAe0E,EAAOH,OAAOvE,cAC7BN,YAAagF,EAAOH,OAAO7E,aALtBgF,EAAOJ,OAShB,cAAC5C,EAAA,EAAD,CAASiD,UAAWT,KAAKU,cAAe9E,UAAWX,IAAWJ,MAAO8C,KAAK,UAA1E,sBAMJ,OAAOqC,KAAKlF,MAAM6F,QAChB,cAACC,EAAA,EAAD,IAEA,sBAAKhF,UAAWX,IAAWsD,YAA3B,UACE,yDACC+B,S,GAnFiBO,aAyGXC,eAhBS,SAAAtC,GACtB,MAAO,CACLgB,KAAMhB,EAAMuC,qBAAqBxD,YACjCkC,MAAOjB,EAAMuC,qBAAqBC,WAClCL,QAASnC,EAAMyC,aAAaN,QAC5Bd,MAAOrB,EAAM0C,KAAKrB,MAClBF,OAAQnB,EAAM0C,KAAKvB,WAGI,SAAAwB,GACzB,MAAO,CACLvB,cAAe,SAACF,EAAWG,GAAZ,OAAuBsB,EAASC,IAAuB1B,EAAWG,QAKtEiB,CAA6CO,YAAiB9C,EAAa+C,M,OChHpFC,E,4MACFC,2BAA6B,WACzB,EAAK1G,MAAM2G,QAAQC,U,EAGvBC,2BAA6B,WACzB,EAAK7G,MAAM2G,QAAQG,QAAQ,2B,uDAI3B,IAAIC,EAAU,cAAC,IAAD,CAAUC,GAAG,MAC3B,GAAI9B,KAAKlF,MAAM0E,KAAM,CACjB,IAAMuC,EAAoB/B,KAAKlF,MAAMkH,UACjC,cAAC,IAAD,CAAUF,GAAG,MACb,KAEJD,EACI,gCACKE,EACD,cAAC,EAAD,CACIrE,oBAAqBsC,KAAKwB,2BAC1B5D,oBAAqBoC,KAAK2B,2BAC1BpE,YAAayC,KAAKlF,MAAM0E,OAE5B,cAAC,IAAD,CACIyC,KAAMjC,KAAKlF,MAAMoH,MAAMC,IAAM,gBAC7BC,UAAW7D,OAK3B,OAAOsD,M,GA/BQhB,aA2CRC,uBARS,SAACtC,GACrB,MAAO,CACHgB,KAAMhB,EAAMuC,qBAAqBxD,YACjCyE,UAAWxD,EAAMyC,aAAae,aAKE,KAAzBlB,CAA+BS","file":"static/js/3.b9fa8113.chunk.js","sourcesContent":["import React from \"react\";\nimport cssClasses from \"./Input.module.css\";\n\nconst Input = (props) => {\n  let inputElement = null;\n  const inputClasses=[cssClasses.InputElement];\n\n  if(props.invalid && props.shouldValidate && props.touched){\n    inputClasses.push(cssClasses.Invalid)\n  }\n\n  switch (props.elementType) {\n    case \"input\":\n      inputElement = (\n        <input\n          onChange={props.changed}\n          value={props.value}\n          className={inputClasses.join(' ')}\n          {...props.elementConfig}\n        />\n      );\n      break;\n    case \"textarea\":\n      inputElement = (\n        <textarea\n          onChange={props.changed}\n          value={props.value}\n          className={inputClasses.join(' ')}\n          {...props.elementConfig}\n        />\n      );\n      break;\n    case \"select\":\n      inputElement = (\n        <select\n          onChange={props.changed}\n          value={props.value}\n          className={inputClasses.join(' ')}\n        >\n          {props.elementConfig.options.map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.displayValue}\n            </option>\n          ))}\n        </select>\n      );\n      break;\n    default:\n      inputElement = (\n        <input\n          onChange={props.changed}\n          value={props.value}\n          className={cssClasses.InputElement}\n          {...props.elementConfig}\n        />\n      );\n  }\n  return (\n    <div className={cssClasses.Input}>\n      <label className={cssClasses.Label}>{props.label}</label>\n      {inputElement}\n    </div>\n  );\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__LtoHt\",\"Label\":\"Input_Label__P5ve3\",\"InputElement\":\"Input_InputElement__3FM1G\",\"Invalid\":\"Input_Invalid__cVEKK\"};","\r\nexport const checkValidity = (value, rules) => {\r\n    let isValid = true;\r\n    if (!rules) {\r\n        return true;\r\n    }\r\n\r\n    if (rules.required) {\r\n        isValid = value.trim() !== \"\" && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n        isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    if (rules.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    return isValid;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__1nHPp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__MKlTk\",\"Inputs\":\"ContactData_Inputs__1GwYc\"};","import React from \"react\";\nimport Burger from \"../../Burger/Burger\";\nimport Button from '../../ui/Button/Button';\nimport cssClasses from './CheckoutSummary.module.css'\n\n\nconst CheckoutSummary = (props) => {\n  return (\n    <div className={cssClasses.CheckoutSummary}>\n      <h1>We hope it tastes well!</h1>\n      <div style={{ width: \"100%\",  margin: \"auto\" }}>\n        <Burger ingredients={props.ingredients}/>\n      </div>\n        <Button clicked={props.onCheckoutCancelled} type={'Danger'}>CANCEL</Button>\n        <Button clicked={props.onCheckoutContinued} type={'Success'}>CONTINUE</Button>\n    </div>\n  );\n};\n\nexport default CheckoutSummary;\n","export const CONTACT_DATA_FORM = {\n  name: {\n    elementType: \"input\",\n    elementConfig: {\n      type: \"text\",\n      placeholder: \"Your Name\",\n    },\n    value: \"\",\n    validation: {\n      required: true,\n    },\n    valid: false,\n    touched: false,\n  },\n  street: {\n    elementType: \"input\",\n    elementConfig: {\n      type: \"text\",\n      placeholder: \"Your StreetName\",\n    },\n    value: \"\",\n    validation: {\n      required: true,\n    },\n    valid: false,\n    touched: false,\n  },\n  zipCode: {\n    elementType: \"input\",\n    elementConfig: {\n      type: \"text\",\n      placeholder: \"Your Zip Code\",\n    },\n    value: \"\",\n    validation: {\n      required: true,\n      minLength: 5,\n      maxLength: 10,\n    },\n    valid: false,\n    touched: false,\n  },\n  country: {\n    elementType: \"input\",\n    elementConfig: {\n      type: \"text\",\n      placeholder: \"Your Country\",\n    },\n    value: \"\",\n    validation: {\n      required: true,\n    },\n    valid: false,\n    touched: false,\n  },\n  email: {\n    elementType: \"input\",\n    elementConfig: {\n      type: \"email\",\n      placeholder: \"Your Email\",\n    },\n    value: \"\",\n    validation: {\n      required: true,\n    },\n    valid: false,\n    touched: false,\n  },\n  deliveryMethod: {\n    elementType: \"select\",\n    elementConfig: {\n      options: [\n        {\n          value: \"fastest\",\n          displayValue: \"Fastest\",\n        },\n        {\n          value: \"cheapest\",\n          displayValue: \"Cheapest\",\n        },\n      ],\n    },\n    validation: {},\n    value: \"fastest\",\n    valid: true,\n    touched: false,\n  },\n};\n\nexport default CONTACT_DATA_FORM;\n","import React, { Component } from \"react\";\nimport Button from \"../../../components/ui/Button/Button\";\nimport cssClasses from \"../ContactData/ContactData.module.css\";\nimport axios from \"../../../axios-orders\";\nimport Spinner from \"../../../components/ui/Spinner/Spinner\";\nimport Input from \"../../../components/ui/Input/Input\";\nimport {connect} from 'react-redux';\nimport WithErrorHandler from '../../../hoc/withErrorHandler/WithErrorHandler';\nimport * as actions from '../../../store/actions/index';\nimport CONTACT_DATA_FORM from './contact-form.contant';\nimport  {updateObject} from '../../../shared/utility';\nimport {checkValidity} from '../../../shared/validation';\n\nclass ContactData extends Component {\n  state = {\n    orderForm: CONTACT_DATA_FORM\n  };\n\n  isFormValid(){\n    return Object.entries(this.state.orderForm).every(([key, value]) => value.valid)\n  }\n\n  inputChangedHandler = (event, inputIdentifier) => {\n\n\n    const updatedFormEl =  updateObject(this.state.orderForm[inputIdentifier], {\n      value: event.target.value,\n      valid: checkValidity(\n          event.target.value,\n          this.state.orderForm[inputIdentifier].validation\n      ),\n      touched: true\n    });\n\n    const updatedOrderForm = updateObject(\n     this.state.orderForm,\n        {\n          [inputIdentifier]: updatedFormEl\n        });\n\n    this.setState({ orderForm: updatedOrderForm });\n  };\n\n  orderHandler = (e) => {\n    e.preventDefault();\n\n    const formData = {};\n    for (let formElIdentifier in this.state.orderForm) {\n      formData[formElIdentifier] = this.state.orderForm[formElIdentifier].value;\n    }\n\n    const order = {\n      ingredients: this.props.ings,\n      price: this.props.price,\n      orderData: formData,\n      userId: this.props.userId\n    };\n\n    this.props.onOrderBurger(order, this.props.token);\n  };\n\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key],\n      });\n    }\n\n    const form = (\n      <form onSubmit={this.orderHandler}>\n        {formElementsArray.map((formEl) => (\n          <Input\n            invalid={!formEl.config.valid}\n            changed={(event) => this.inputChangedHandler(event, formEl.id)}\n            key={formEl.id}\n            touched={formEl.config.touched}\n            shouldValidate={formEl.config.validation}\n            value={formEl.config.value}\n            elementConfig={formEl.config.elementConfig}\n            elementType={formEl.config.elementType}\n          />\n        ))}\n\n        <Button  disabled={!this.isFormValid()} className={cssClasses.Input} type=\"Success\">\n          ORDER\n        </Button>\n      </form>\n    );\n\n    return this.props.loading ? (\n      <Spinner />\n    ) : (\n      <div className={cssClasses.ContactData}>\n        <h4>Enter your Contact Data</h4>\n        {form}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilderReducer.ingredients,\n    price: state.burgerBuilderReducer.totalPrice,\n    loading: state.orderReducer.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  }\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    onOrderBurger: (orderData, token) =>  dispatch(actions.purchaseBurger(orderData, token))\n  }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WithErrorHandler(ContactData, axios)) ;\n","import React, { Component } from \"react\";\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\nimport ContactData from \"./ContactData/ContactData\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nclass Checkout extends Component {\n    onCheckoutCancelledHandler = () => {\n        this.props.history.goBack();\n    };\n\n    onCheckoutContinuedHandler = () => {\n        this.props.history.replace(\"/checkout/contact-data\");\n    };\n\n    render() {\n        let summary = <Redirect to=\"/\" />;\n        if (this.props.ings) {\n            const purchasedRedirect = this.props.purchased ? (\n                <Redirect to=\"/\" />\n            ) : null;\n\n            summary = (\n                <div>\n                    {purchasedRedirect}\n                    <CheckoutSummary\n                        onCheckoutCancelled={this.onCheckoutCancelledHandler}\n                        onCheckoutContinued={this.onCheckoutContinuedHandler}\n                        ingredients={this.props.ings}\n                    />\n                    <Route\n                        path={this.props.match.url + \"/contact-data\"}\n                        component={ContactData}\n                    />\n                </div>\n            );\n        }\n        return summary;\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        ings: state.burgerBuilderReducer.ingredients,\n        purchased: state.orderReducer.purchased,\n    };\n};\n\n\nexport default connect(mapStateToProps, null)(Checkout);\n"],"sourceRoot":""}